- name: 准备 Docker 相关目录
  file: 
    name: "{{ item }}"
    state: directory
  with_items:
  - /etc/docker
  - "{{ docker_storage_dir }}"
  - /etc/systemd/system/docker.service.d

- name: 编写 Docker 代理配置
  template:
    src: http-proxy.conf.j2
    dest: /etc/systemd/system/docker.service.d/http-proxy.conf
  when: http_proxy is defined or https_proxy is defined

- name: 确认 Docker 配置是否有修改
  template:
    src: docker-daemon.json.j2
    dest: /etc/docker/daemon.json
    owner: root
    mode: 0644
  register: configuration_result

- name: 重新加载 daemon
  systemd:
    daemon_reload: yes

- block:
  - name: 需手动重启 Docker 
    vars: 
      msg: |
        节点：{{ inventory_hostname }} ，Docker 处于运行中，
        但 Docker 配置文件 /etc/docker/daemon.json 已更新，
        请在集群安装完成后手动执行下面命令重启该节点 docker 与 kubelet：
            systemctl restart docker
            systemctl restart kubelet
        
        若重启后 kubelet 无法正常启动：
        请确认以下两个文件中 cgroup driver 参数是否设置为 systemd，
        若不是则修改为 systemd 后再次重启 kubelet。
            vi /var/lib/kubelet/config.yaml
            vi /var/lib/kubelet/kubeadm-flags.env
        在 /var/lib/kubelet/config.yaml 文件中参数名为：cgroupDriver；
        在 /var/lib/kubelet/kubeadm-flags.env 文件中参数名为：--cgroup-driver，若参数不存在请忽略。

    debug: 
      msg: "{{ msg.split('\n') }}"

  - name: 等待用户查看日志
    shell: sleep 60
    run_once: true
  when: 
  - configuration_result.changed
  - '"active" in docker_already_running.stdout'

- name: 开启docker 服务
  shell: systemctl daemon-reload && systemctl restart docker
  register: result
  until: result is not failed
  retries: 10
  delay: 6

- name: 轮询等待docker服务运行
  shell: |
      systemctl is-active docker.service
  register: docker_status
  until: '"active" in docker_status.stdout'
  retries: 10
  delay: 6

- name: 开机启用docker 服务
  shell: systemctl enable docker
  ignore_errors: true
